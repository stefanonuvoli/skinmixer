add_test( [==[tetrahedralize: single_tet]==] /usr/include/libigl/build/libigl_tests [==[tetrahedralize: single_tet]==])
set_tests_properties( [==[tetrahedralize: single_tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[tetrahedralize: schoenhardt]==] /usr/include/libigl/build/libigl_tests [==[tetrahedralize: schoenhardt]==])
set_tests_properties( [==[tetrahedralize: schoenhardt]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[miq: 3_holes]==] /usr/include/libigl/build/libigl_tests [==[miq: 3_holes]==])
set_tests_properties( [==[miq: 3_holes]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[EmbreeIntersector: cube]==] /usr/include/libigl/build/libigl_tests [==[EmbreeIntersector: cube]==])
set_tests_properties( [==[EmbreeIntersector: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[ear_clipping: boolean]==] /usr/include/libigl/build/libigl_tests [==[ear_clipping: boolean]==])
set_tests_properties( [==[ear_clipping: boolean]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( predicates /usr/include/libigl/build/libigl_tests predicates)
set_tests_properties( predicates PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[segment_segment_intersect: robust]==] /usr/include/libigl/build/libigl_tests [==[segment_segment_intersect: robust]==])
set_tests_properties( [==[segment_segment_intersect: robust]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[accumarray: matlab_help]==] /usr/include/libigl/build/libigl_tests [==[accumarray: matlab_help]==])
set_tests_properties( [==[accumarray: matlab_help]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[accumarray: scalar]==] /usr/include/libigl/build/libigl_tests [==[accumarray: scalar]==])
set_tests_properties( [==[accumarray: scalar]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[avg_edge_length: cube]==] /usr/include/libigl/build/libigl_tests [==[avg_edge_length: cube]==])
set_tests_properties( [==[avg_edge_length: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[bbw: decimated_knight]==] /usr/include/libigl/build/libigl_tests [==[bbw: decimated_knight]==])
set_tests_properties( [==[bbw: decimated_knight]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[bezier: ease]==] /usr/include/libigl/build/libigl_tests [==[bezier: ease]==])
set_tests_properties( [==[bezier: ease]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[boundary_facets: single_tet]==] /usr/include/libigl/build/libigl_tests [==[boundary_facets: single_tet]==])
set_tests_properties( [==[boundary_facets: single_tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[boundary_facets: single_cube]==] /usr/include/libigl/build/libigl_tests [==[boundary_facets: single_cube]==])
set_tests_properties( [==[boundary_facets: single_cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[boundary_facets: non-manifold]==] /usr/include/libigl/build/libigl_tests [==[boundary_facets: non-manifold]==])
set_tests_properties( [==[boundary_facets: non-manifold]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[boundary_loop: cube]==] /usr/include/libigl/build/libigl_tests [==[boundary_loop: cube]==])
set_tests_properties( [==[boundary_loop: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[boundary_loop: bunny]==] /usr/include/libigl/build/libigl_tests [==[boundary_loop: bunny]==])
set_tests_properties( [==[boundary_loop: bunny]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cat: rows]==] /usr/include/libigl/build/libigl_tests [==[cat: rows]==])
set_tests_properties( [==[cat: rows]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cat: cols]==] /usr/include/libigl/build/libigl_tests [==[cat: cols]==])
set_tests_properties( [==[cat: cols]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[circulation: single_edge]==] /usr/include/libigl/build/libigl_tests [==[circulation: single_edge]==])
set_tests_properties( [==[circulation: single_edge]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix: constant_in_null_space]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix: constant_in_null_space]==])
set_tests_properties( [==[cotmatrix: constant_in_null_space]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix: cube]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix: cube]==])
set_tests_properties( [==[cotmatrix: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix: tetrahedron]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix: tetrahedron]==])
set_tests_properties( [==[cotmatrix: tetrahedron]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix_entries: simple]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix_entries: simple]==])
set_tests_properties( [==[cotmatrix_entries: simple]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix_entries: intrinsic]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix_entries: intrinsic]==])
set_tests_properties( [==[cotmatrix_entries: intrinsic]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix_intrinsic: periodic]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix_intrinsic: periodic]==])
set_tests_properties( [==[cotmatrix_intrinsic: periodic]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cotmatrix_intrinsic: manifold_meshes]==] /usr/include/libigl/build/libigl_tests [==[cotmatrix_intrinsic: manifold_meshes]==])
set_tests_properties( [==[cotmatrix_intrinsic: manifold_meshes]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cumprod: col_factorial]==] /usr/include/libigl/build/libigl_tests [==[cumprod: col_factorial]==])
set_tests_properties( [==[cumprod: col_factorial]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cumprod: row_factorial]==] /usr/include/libigl/build/libigl_tests [==[cumprod: row_factorial]==])
set_tests_properties( [==[cumprod: row_factorial]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cumsum: col]==] /usr/include/libigl/build/libigl_tests [==[cumsum: col]==])
set_tests_properties( [==[cumsum: col]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cumsum: row]==] /usr/include/libigl/build/libigl_tests [==[cumsum: row]==])
set_tests_properties( [==[cumsum: row]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[seperate mesh]==] /usr/include/libigl/build/libigl_tests [==[seperate mesh]==])
set_tests_properties( [==[seperate mesh]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[single edge]==] /usr/include/libigl/build/libigl_tests [==[single edge]==])
set_tests_properties( [==[single edge]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cut_to_disk: simple_tet]==] /usr/include/libigl/build/libigl_tests [==[cut_to_disk: simple_tet]==])
set_tests_properties( [==[cut_to_disk: simple_tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cut_to_disk: two_disconnected_tet]==] /usr/include/libigl/build/libigl_tests [==[cut_to_disk: two_disconnected_tet]==])
set_tests_properties( [==[cut_to_disk: two_disconnected_tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cut_to_disk: simple_square]==] /usr/include/libigl/build/libigl_tests [==[cut_to_disk: simple_square]==])
set_tests_properties( [==[cut_to_disk: simple_square]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cut_to_disk: torus]==] /usr/include/libigl/build/libigl_tests [==[cut_to_disk: torus]==])
set_tests_properties( [==[cut_to_disk: torus]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cut_to_disk: cube]==] /usr/include/libigl/build/libigl_tests [==[cut_to_disk: cube]==])
set_tests_properties( [==[cut_to_disk: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[cut_to_disk: annulus]==] /usr/include/libigl/build/libigl_tests [==[cut_to_disk: annulus]==])
set_tests_properties( [==[cut_to_disk: annulus]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[decimate: hemisphere]==] /usr/include/libigl/build/libigl_tests [==[decimate: hemisphere]==])
set_tests_properties( [==[decimate: hemisphere]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[decimate: closed]==] /usr/include/libigl/build/libigl_tests [==[decimate: closed]==])
set_tests_properties( [==[decimate: closed]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( delaunay_triangulation_issue_521 /usr/include/libigl/build/libigl_tests delaunay_triangulation_issue_521)
set_tests_properties( delaunay_triangulation_issue_521 PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[dijkstra: cube]==] /usr/include/libigl/build/libigl_tests [==[dijkstra: cube]==])
set_tests_properties( [==[dijkstra: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[dijkstra: discrete distances]==] /usr/include/libigl/build/libigl_tests [==[dijkstra: discrete distances]==])
set_tests_properties( [==[dijkstra: discrete distances]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[dirname: examples]==] /usr/include/libigl/build/libigl_tests [==[dirname: examples]==])
set_tests_properties( [==[dirname: examples]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[doublearea: VF_vs_ABC]==] /usr/include/libigl/build/libigl_tests [==[doublearea: VF_vs_ABC]==])
set_tests_properties( [==[doublearea: VF_vs_ABC]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[edge_exists_near: tet]==] /usr/include/libigl/build/libigl_tests [==[edge_exists_near: tet]==])
set_tests_properties( [==[edge_exists_near: tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[edge_flaps: verify]==] /usr/include/libigl/build/libigl_tests [==[edge_flaps: verify]==])
set_tests_properties( [==[edge_flaps: verify]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[edge_lengths: cube]==] /usr/include/libigl/build/libigl_tests [==[edge_lengths: cube]==])
set_tests_properties( [==[edge_lengths: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[facet_components: two_triangles]==] /usr/include/libigl/build/libigl_tests [==[facet_components: two_triangles]==])
set_tests_properties( [==[facet_components: two_triangles]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[facet_components: truck]==] /usr/include/libigl/build/libigl_tests [==[facet_components: truck]==])
set_tests_properties( [==[facet_components: truck]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[fast_winding_number: one_point_cloud]==] /usr/include/libigl/build/libigl_tests [==[fast_winding_number: one_point_cloud]==])
set_tests_properties( [==[fast_winding_number: one_point_cloud]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[fast_winding_number: meshes]==] /usr/include/libigl/build/libigl_tests [==[fast_winding_number: meshes]==])
set_tests_properties( [==[fast_winding_number: meshes]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[fit_cubic_bezier: hemicircle]==] /usr/include/libigl/build/libigl_tests [==[fit_cubic_bezier: hemicircle]==])
set_tests_properties( [==[fit_cubic_bezier: hemicircle]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[grad: laplace_grid]==] /usr/include/libigl/build/libigl_tests [==[grad: laplace_grid]==])
set_tests_properties( [==[grad: laplace_grid]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[grad_intrinsic: laplace_grid]==] /usr/include/libigl/build/libigl_tests [==[grad_intrinsic: laplace_grid]==])
set_tests_properties( [==[grad_intrinsic: laplace_grid]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[grid: 3d]==] /usr/include/libigl/build/libigl_tests [==[grid: 3d]==])
set_tests_properties( [==[grid: 3d]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[grid: 2d]==] /usr/include/libigl/build/libigl_tests [==[grid: 2d]==])
set_tests_properties( [==[grid: 2d]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[guess_extension: all_meshes]==] /usr/include/libigl/build/libigl_tests [==[guess_extension: all_meshes]==])
set_tests_properties( [==[guess_extension: all_meshes]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[intrinsic_delaunay_cotmatrix: skewed_grid]==] /usr/include/libigl/build/libigl_tests [==[intrinsic_delaunay_cotmatrix: skewed_grid]==])
set_tests_properties( [==[intrinsic_delaunay_cotmatrix: skewed_grid]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[intrinsic_delaunay_cotmatrix: manifold_meshes]==] /usr/include/libigl/build/libigl_tests [==[intrinsic_delaunay_cotmatrix: manifold_meshes]==])
set_tests_properties( [==[intrinsic_delaunay_cotmatrix: manifold_meshes]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[intrinsic_delaunay_triangulation: two_triangles]==] /usr/include/libigl/build/libigl_tests [==[intrinsic_delaunay_triangulation: two_triangles]==])
set_tests_properties( [==[intrinsic_delaunay_triangulation: two_triangles]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[intrinsic_delaunay_triangulation: skewed_grid]==] /usr/include/libigl/build/libigl_tests [==[intrinsic_delaunay_triangulation: skewed_grid]==])
set_tests_properties( [==[intrinsic_delaunay_triangulation: skewed_grid]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[intrinsic_delaunay_triangulation: peaks]==] /usr/include/libigl/build/libigl_tests [==[intrinsic_delaunay_triangulation: peaks]==])
set_tests_properties( [==[intrinsic_delaunay_triangulation: peaks]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[intrinsic_delaunay_triangulation: tet]==] /usr/include/libigl/build/libigl_tests [==[intrinsic_delaunay_triangulation: tet]==])
set_tests_properties( [==[intrinsic_delaunay_triangulation: tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_delaunay: two_triangles]==] /usr/include/libigl/build/libigl_tests [==[is_delaunay: two_triangles]==])
set_tests_properties( [==[is_delaunay: two_triangles]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_edge_manifold: positive]==] /usr/include/libigl/build/libigl_tests [==[is_edge_manifold: positive]==])
set_tests_properties( [==[is_edge_manifold: positive]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_edge_manifold: negative]==] /usr/include/libigl/build/libigl_tests [==[is_edge_manifold: negative]==])
set_tests_properties( [==[is_edge_manifold: negative]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_intrinsic_delaunay: two_triangles]==] /usr/include/libigl/build/libigl_tests [==[is_intrinsic_delaunay: two_triangles]==])
set_tests_properties( [==[is_intrinsic_delaunay: two_triangles]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_irregular_vertex: simple]==] /usr/include/libigl/build/libigl_tests [==[is_irregular_vertex: simple]==])
set_tests_properties( [==[is_irregular_vertex: simple]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_symmetric: sparse]==] /usr/include/libigl/build/libigl_tests [==[is_symmetric: sparse]==])
set_tests_properties( [==[is_symmetric: sparse]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[is_symmetric: dense]==] /usr/include/libigl/build/libigl_tests [==[is_symmetric: dense]==])
set_tests_properties( [==[is_symmetric: dense]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[ismember: simple]==] /usr/include/libigl/build/libigl_tests [==[ismember: simple]==])
set_tests_properties( [==[ismember: simple]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[iterative_closest_point: identity]==] /usr/include/libigl/build/libigl_tests [==[iterative_closest_point: identity]==])
set_tests_properties( [==[iterative_closest_point: identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[ListToMatrixTest: matrix]==] /usr/include/libigl/build/libigl_tests [==[ListToMatrixTest: matrix]==])
set_tests_properties( [==[ListToMatrixTest: matrix]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[igl_path_to_edges: basic_test]==] /usr/include/libigl/build/libigl_tests [==[igl_path_to_edges: basic_test]==])
set_tests_properties( [==[igl_path_to_edges: basic_test]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[igl_path_to_edges: loop_test]==] /usr/include/libigl/build/libigl_tests [==[igl_path_to_edges: loop_test]==])
set_tests_properties( [==[igl_path_to_edges: loop_test]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[igl_path_to_edges: vector_basic_test]==] /usr/include/libigl/build/libigl_tests [==[igl_path_to_edges: vector_basic_test]==])
set_tests_properties( [==[igl_path_to_edges: vector_basic_test]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[igl_path_to_edges: vector_loop_test]==] /usr/include/libigl/build/libigl_tests [==[igl_path_to_edges: vector_loop_test]==])
set_tests_properties( [==[igl_path_to_edges: vector_loop_test]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[path_to_executable: example]==] /usr/include/libigl/build/libigl_tests [==[path_to_executable: example]==])
set_tests_properties( [==[path_to_executable: example]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[pathinfo: examples]==] /usr/include/libigl/build/libigl_tests [==[pathinfo: examples]==])
set_tests_properties( [==[pathinfo: examples]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[per_face_normals: dot]==] /usr/include/libigl/build/libigl_tests [==[per_face_normals: dot]==])
set_tests_properties( [==[per_face_normals: dot]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[qslim: cylinder]==] /usr/include/libigl/build/libigl_tests [==[qslim: cylinder]==])
set_tests_properties( [==[qslim: cylinder]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: default_rng_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: default_rng_reproduce_identity]==])
set_tests_properties( [==[randperm: default_rng_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: minstd_rand0_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: minstd_rand0_reproduce_identity]==])
set_tests_properties( [==[randperm: minstd_rand0_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: minstd_rand_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: minstd_rand_reproduce_identity]==])
set_tests_properties( [==[randperm: minstd_rand_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: mt19937_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: mt19937_reproduce_identity]==])
set_tests_properties( [==[randperm: mt19937_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: mt19937_64_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: mt19937_64_reproduce_identity]==])
set_tests_properties( [==[randperm: mt19937_64_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: ranlux24_base_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: ranlux24_base_reproduce_identity]==])
set_tests_properties( [==[randperm: ranlux24_base_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: ranlux48_base_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: ranlux48_base_reproduce_identity]==])
set_tests_properties( [==[randperm: ranlux48_base_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: ranlux24_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: ranlux24_reproduce_identity]==])
set_tests_properties( [==[randperm: ranlux24_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: ranlux48_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: ranlux48_reproduce_identity]==])
set_tests_properties( [==[randperm: ranlux48_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: knuth_b_reproduce_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: knuth_b_reproduce_identity]==])
set_tests_properties( [==[randperm: knuth_b_reproduce_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[randperm: default_identity]==] /usr/include/libigl/build/libigl_tests [==[randperm: default_identity]==])
set_tests_properties( [==[randperm: default_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readDMAT: Comp]==] /usr/include/libigl/build/libigl_tests [==[readDMAT: Comp]==])
set_tests_properties( [==[readDMAT: Comp]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readOBJ: simple]==] /usr/include/libigl/build/libigl_tests [==[readOBJ: simple]==])
set_tests_properties( [==[readOBJ: simple]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readOBJ: Obj with material]==] /usr/include/libigl/build/libigl_tests [==[readOBJ: Obj with material]==])
set_tests_properties( [==[readOBJ: Obj with material]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readOFF: simple]==] /usr/include/libigl/build/libigl_tests [==[readOFF: simple]==])
set_tests_properties( [==[readOFF: simple]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readPLY: cube_with_fold.ply]==] /usr/include/libigl/build/libigl_tests [==[readPLY: cube_with_fold.ply]==])
set_tests_properties( [==[readPLY: cube_with_fold.ply]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readPLY: bunny.ply]==] /usr/include/libigl/build/libigl_tests [==[readPLY: bunny.ply]==])
set_tests_properties( [==[readPLY: bunny.ply]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readPLY: mesh_error.ply]==] /usr/include/libigl/build/libigl_tests [==[readPLY: mesh_error.ply]==])
set_tests_properties( [==[readPLY: mesh_error.ply]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[readPLY: quad_cube.ply]==] /usr/include/libigl/build/libigl_tests [==[readPLY: quad_cube.ply]==])
set_tests_properties( [==[readPLY: quad_cube.ply]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[rigid_alignment: identity]==] /usr/include/libigl/build/libigl_tests [==[rigid_alignment: identity]==])
set_tests_properties( [==[rigid_alignment: identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[seam_edges: tet]==] /usr/include/libigl/build/libigl_tests [==[seam_edges: tet]==])
set_tests_properties( [==[seam_edges: tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[segment_segment_intersect: examples]==] /usr/include/libigl/build/libigl_tests [==[segment_segment_intersect: examples]==])
set_tests_properties( [==[segment_segment_intersect: examples]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[setdiff: matrix]==] /usr/include/libigl/build/libigl_tests [==[setdiff: matrix]==])
set_tests_properties( [==[setdiff: matrix]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[signed_distance: single_tet]==] /usr/include/libigl/build/libigl_tests [==[signed_distance: single_tet]==])
set_tests_properties( [==[signed_distance: single_tet]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[signed_distance: single_triangle]==] /usr/include/libigl/build/libigl_tests [==[signed_distance: single_triangle]==])
set_tests_properties( [==[signed_distance: single_triangle]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice: dense_identity]==] /usr/include/libigl/build/libigl_tests [==[slice: dense_identity]==])
set_tests_properties( [==[slice: dense_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice: sparse_identity]==] /usr/include/libigl/build/libigl_tests [==[slice: sparse_identity]==])
set_tests_properties( [==[slice: sparse_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice: density_reverse]==] /usr/include/libigl/build/libigl_tests [==[slice: density_reverse]==])
set_tests_properties( [==[slice: density_reverse]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice: random]==] /usr/include/libigl/build/libigl_tests [==[slice: random]==])
set_tests_properties( [==[slice: random]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice_into: dense_identity]==] /usr/include/libigl/build/libigl_tests [==[slice_into: dense_identity]==])
set_tests_properties( [==[slice_into: dense_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice_into: density_reverse]==] /usr/include/libigl/build/libigl_tests [==[slice_into: density_reverse]==])
set_tests_properties( [==[slice_into: density_reverse]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice_into: sparse_identity]==] /usr/include/libigl/build/libigl_tests [==[slice_into: sparse_identity]==])
set_tests_properties( [==[slice_into: sparse_identity]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice_sorted: correctness]==] /usr/include/libigl/build/libigl_tests [==[slice_sorted: correctness]==])
set_tests_properties( [==[slice_sorted: correctness]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[slice_sorted: benchmark]==] /usr/include/libigl/build/libigl_tests [==[slice_sorted: benchmark]==])
set_tests_properties( [==[slice_sorted: benchmark]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[SortTest: random]==] /usr/include/libigl/build/libigl_tests [==[SortTest: random]==])
set_tests_properties( [==[SortTest: random]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[squared_edge_lengths: cube]==] /usr/include/libigl/build/libigl_tests [==[squared_edge_lengths: cube]==])
set_tests_properties( [==[squared_edge_lengths: cube]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[tet_tet_adjacency: dot]==] /usr/include/libigl/build/libigl_tests [==[tet_tet_adjacency: dot]==])
set_tests_properties( [==[tet_tet_adjacency: dot]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[triangle_triangle_adjacency: dot]==] /usr/include/libigl/build/libigl_tests [==[triangle_triangle_adjacency: dot]==])
set_tests_properties( [==[triangle_triangle_adjacency: dot]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[triangulated_grid: area]==] /usr/include/libigl/build/libigl_tests [==[triangulated_grid: area]==])
set_tests_properties( [==[triangulated_grid: area]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[unique: matrix]==] /usr/include/libigl/build/libigl_tests [==[unique: matrix]==])
set_tests_properties( [==[unique: matrix]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[unique_rows: matrix]==] /usr/include/libigl/build/libigl_tests [==[unique_rows: matrix]==])
set_tests_properties( [==[unique_rows: matrix]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[igl_unique_simplices: duplicate_triangles]==] /usr/include/libigl/build/libigl_tests [==[igl_unique_simplices: duplicate_triangles]==])
set_tests_properties( [==[igl_unique_simplices: duplicate_triangles]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[upsample: single_triangle]==] /usr/include/libigl/build/libigl_tests [==[upsample: single_triangle]==])
set_tests_properties( [==[upsample: single_triangle]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[upsample: V_comes_first_F_ordering]==] /usr/include/libigl/build/libigl_tests [==[upsample: V_comes_first_F_ordering]==])
set_tests_properties( [==[upsample: V_comes_first_F_ordering]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
add_test( [==[writePLY: bunny.ply]==] /usr/include/libigl/build/libigl_tests [==[writePLY: bunny.ply]==])
set_tests_properties( [==[writePLY: bunny.ply]==] PROPERTIES WORKING_DIRECTORY /usr/include/libigl/build/tests)
set( libigl_tests_TESTS [==[tetrahedralize: single_tet]==] [==[tetrahedralize: schoenhardt]==] [==[miq: 3_holes]==] [==[EmbreeIntersector: cube]==] [==[ear_clipping: boolean]==] predicates [==[segment_segment_intersect: robust]==] [==[accumarray: matlab_help]==] [==[accumarray: scalar]==] [==[avg_edge_length: cube]==] [==[bbw: decimated_knight]==] [==[bezier: ease]==] [==[boundary_facets: single_tet]==] [==[boundary_facets: single_cube]==] [==[boundary_facets: non-manifold]==] [==[boundary_loop: cube]==] [==[boundary_loop: bunny]==] [==[cat: rows]==] [==[cat: cols]==] [==[circulation: single_edge]==] [==[cotmatrix: constant_in_null_space]==] [==[cotmatrix: cube]==] [==[cotmatrix: tetrahedron]==] [==[cotmatrix_entries: simple]==] [==[cotmatrix_entries: intrinsic]==] [==[cotmatrix_intrinsic: periodic]==] [==[cotmatrix_intrinsic: manifold_meshes]==] [==[cumprod: col_factorial]==] [==[cumprod: row_factorial]==] [==[cumsum: col]==] [==[cumsum: row]==] [==[seperate mesh]==] [==[single edge]==] [==[cut_to_disk: simple_tet]==] [==[cut_to_disk: two_disconnected_tet]==] [==[cut_to_disk: simple_square]==] [==[cut_to_disk: torus]==] [==[cut_to_disk: cube]==] [==[cut_to_disk: annulus]==] [==[decimate: hemisphere]==] [==[decimate: closed]==] delaunay_triangulation_issue_521 [==[dijkstra: cube]==] [==[dijkstra: discrete distances]==] [==[dirname: examples]==] [==[doublearea: VF_vs_ABC]==] [==[edge_exists_near: tet]==] [==[edge_flaps: verify]==] [==[edge_lengths: cube]==] [==[facet_components: two_triangles]==] [==[facet_components: truck]==] [==[fast_winding_number: one_point_cloud]==] [==[fast_winding_number: meshes]==] [==[fit_cubic_bezier: hemicircle]==] [==[grad: laplace_grid]==] [==[grad_intrinsic: laplace_grid]==] [==[grid: 3d]==] [==[grid: 2d]==] [==[guess_extension: all_meshes]==] [==[intrinsic_delaunay_cotmatrix: skewed_grid]==] [==[intrinsic_delaunay_cotmatrix: manifold_meshes]==] [==[intrinsic_delaunay_triangulation: two_triangles]==] [==[intrinsic_delaunay_triangulation: skewed_grid]==] [==[intrinsic_delaunay_triangulation: peaks]==] [==[intrinsic_delaunay_triangulation: tet]==] [==[is_delaunay: two_triangles]==] [==[is_edge_manifold: positive]==] [==[is_edge_manifold: negative]==] [==[is_intrinsic_delaunay: two_triangles]==] [==[is_irregular_vertex: simple]==] [==[is_symmetric: sparse]==] [==[is_symmetric: dense]==] [==[ismember: simple]==] [==[iterative_closest_point: identity]==] [==[ListToMatrixTest: matrix]==] [==[igl_path_to_edges: basic_test]==] [==[igl_path_to_edges: loop_test]==] [==[igl_path_to_edges: vector_basic_test]==] [==[igl_path_to_edges: vector_loop_test]==] [==[path_to_executable: example]==] [==[pathinfo: examples]==] [==[per_face_normals: dot]==] [==[qslim: cylinder]==] [==[randperm: default_rng_reproduce_identity]==] [==[randperm: minstd_rand0_reproduce_identity]==] [==[randperm: minstd_rand_reproduce_identity]==] [==[randperm: mt19937_reproduce_identity]==] [==[randperm: mt19937_64_reproduce_identity]==] [==[randperm: ranlux24_base_reproduce_identity]==] [==[randperm: ranlux48_base_reproduce_identity]==] [==[randperm: ranlux24_reproduce_identity]==] [==[randperm: ranlux48_reproduce_identity]==] [==[randperm: knuth_b_reproduce_identity]==] [==[randperm: default_identity]==] [==[readDMAT: Comp]==] [==[readOBJ: simple]==] [==[readOBJ: Obj with material]==] [==[readOFF: simple]==] [==[readPLY: cube_with_fold.ply]==] [==[readPLY: bunny.ply]==] [==[readPLY: mesh_error.ply]==] [==[readPLY: quad_cube.ply]==] [==[rigid_alignment: identity]==] [==[seam_edges: tet]==] [==[segment_segment_intersect: examples]==] [==[setdiff: matrix]==] [==[signed_distance: single_tet]==] [==[signed_distance: single_triangle]==] [==[slice: dense_identity]==] [==[slice: sparse_identity]==] [==[slice: density_reverse]==] [==[slice: random]==] [==[slice_into: dense_identity]==] [==[slice_into: density_reverse]==] [==[slice_into: sparse_identity]==] [==[slice_sorted: correctness]==] [==[slice_sorted: benchmark]==] [==[SortTest: random]==] [==[squared_edge_lengths: cube]==] [==[tet_tet_adjacency: dot]==] [==[triangle_triangle_adjacency: dot]==] [==[triangulated_grid: area]==] [==[unique: matrix]==] [==[unique_rows: matrix]==] [==[igl_unique_simplices: duplicate_triangles]==] [==[upsample: single_triangle]==] [==[upsample: V_comes_first_F_ordering]==] [==[writePLY: bunny.ply]==])
